#!/usr/bin/make -f
# -*- mode: makefile; coding: utf-8 -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

DEB_HOST_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_MULTIARCH ?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH 2>/dev/null)

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
  CFLAGS += -O0
else
  CFLAGS += -O2
endif

ifneq ($(DEB_HOST_MULTIARCH),)
MULTIARCH_CONFIGURE_FLAGS := \
	--libdir=/usr/lib/$(DEB_HOST_MULTIARCH)
endif

INSTALL_FILES = \
	debian/libcm4all-was-simple-dev.install \
	debian/libcm4all-was-simple1.install \
	debian/libcm4all-was-apreq-dev.install \
	debian/libcm4all-was-apreq1.install \
	debian/libcm4all-was-xios-dev.install \
	debian/libcm4all-was-xios1.install
$(INSTALL_FILES): %: %.in
ifeq ($(DEB_HOST_MULTIARCH),)
	cp $< $@
else
	sed 's,usr/lib,usr/lib/$(DEB_HOST_MULTIARCH),g' $< >$@
endif

configure: debian/stamp-configure
debian/stamp-configure:
	dh_testdir

	mkdir -p build
	libtoolize --automake --copy --force
	aclocal -I m4
	automake --add-missing --foreign
	autoconf

	./configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) \
		CFLAGS="$(CFLAGS)" CXXFLAGS="$(CFLAGS)" \
		--disable-dependency-tracking \
		--prefix=/usr \
		--sysconfdir=/etc \
		--includedir=/usr/include/cm4all/libwas-1 \
		$(MULTIARCH_CONFIGURE_FLAGS) \
		--enable-debug

	@touch $@

build: debian/stamp-build
debian/stamp-build: debian/stamp-configure
	dh_testdir

	$(MAKE)

	@touch $@

check: debian/stamp-check
debian/stamp-check:
	$(MAKE) check

	@touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f debian/stamp-* $(INSTALL_FILES)

	[ ! -f Makefile ] || $(MAKE) distclean

	dh_clean

install: debian/stamp-install
debian/stamp-install: debian/stamp-build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	$(MAKE) DESTDIR=`pwd`/debian/tmp install

	@touch $@

# Build architecture-independent files here.
binary-indep: build check install
	dh_testdir -i
	dh_testroot -i
	dh_installdocs -i
	dh_installchangelogs -i
	dh_install -i
	dh_link -i
	dh_strip -i
	dh_compress -i -X.pdf
	dh_fixperms -i
	dh_installdeb -i
	dh_shlibdeps -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build check install $(INSTALL_FILES)
	dh_testdir -a
	dh_testroot -a
	dh_installdocs -a
	dh_installman -a
	dh_installchangelogs -a
	dh_install -a
	dh_link -a
	#dh_strip -a
	dh_compress -a
	dh_fixperms -a
	dh_makeshlibs -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

source diff:
	@echo >&2 'source and diff are obsolete - use dpkg-source -b'; false

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
